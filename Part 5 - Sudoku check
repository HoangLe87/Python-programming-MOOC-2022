# Write your solution here
def block_correct(sudoku: list, row_no: int, column_no: int):
    a=[]
    for i in range(0,3):
        for j in range(0,3):
            a.append(sudoku[row_no+i][column_no+j])
    b = list(filter(lambda x: x!=0, a))
    if len(b)==len(set(b)):
        return True
    else:
        return False

def column_correct(sudoku: list, column_no: int):

    a=[x[column_no] for x in sudoku]
    removed = list(filter(lambda x: x!=0, a))
    if len(removed) == len(set(removed)):
        return True
    else:
        return False

def row_correct(sudoku: list, row_no: int):
    a = list(filter(lambda x: x!=0, sudoku[row_no]))
    if len(a) != len(set(a)):
        return False
    else:
        return True


def sudoku_grid_correct(sudoku: list):
    for i in range(0,7,3):
        for j in range(0,7,3):
            if block_correct(sudoku, i, j)!=True or column_correct(sudoku,i)!=True or row_correct(sudoku,i)!=True:
                return False
    else:
        return True

if __name__=='__main__':
    sudoku1 = [
    [9, 0, 0, 0, 8, 0, 3, 0, 0],
    [2, 0, 0, 2, 5, 0, 7, 0, 0],
    [0, 2, 0, 3, 0, 0, 0, 0, 4],
    [2, 9, 4, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 7, 3, 0, 5, 6, 0],
    [7, 0, 5, 0, 6, 0, 4, 0, 0],
    [0, 0, 7, 8, 0, 3, 9, 0, 0],
    [0, 0, 1, 0, 0, 0, 0, 0, 3],
    [3, 0, 0, 0, 0, 0, 0, 0, 2]
    ]

    print(sudoku_grid_correct(sudoku1))
    
      sudoku2 = [
    [2, 6, 7, 8, 3, 9, 5, 0, 4],
    [9, 0, 3, 5, 1, 0, 6, 0, 0],
    [0, 5, 1, 6, 0, 0, 8, 3, 9],
    [5, 1, 9, 0, 4, 6, 3, 2, 8],
    [8, 0, 2, 1, 0, 5, 7, 0, 6],
    [6, 7, 4, 3, 2, 0, 0, 0, 5],
    [0, 0, 0, 4, 5, 7, 2, 6, 3],
    [3, 2, 0, 0, 8, 0, 0, 5, 7],
    [7, 4, 5, 0, 0, 3, 9, 0, 1]
  ]

  print(sudoku_grid_correct(sudoku2))
