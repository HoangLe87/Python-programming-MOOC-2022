import pygame
import math

class Robot:
    def __init__(self,x=240,y=200, velocity=1):
        self.x=x
        self.y=y
        self.velocity=velocity
        self.robot = pygame.image.load("robot.png")
        self.to_right = False
        self.to_left = False
        self.to_up = False
        self.to_down = False
    
    def movement(self):
        if self.to_right and self.x+self.robot.get_width()<=640 and self.x>=-2:
            self.x += 2
        if self.to_left and self.x>=0 and self.robot.get_width()<=642:
            self.x -= 2
        if self.to_up and self.y>=0 and self.y+self.robot.get_height()<=482:
            self.y -=2
        if self.to_down and self.y+self.robot.get_height()<=480 and self.y>=-2:
            self.y +=2

class Monster(Robot):
    def __init__(self,x,y,speed,radius=150):
        super().__init__(x,y)
        self.angle=0.01
        self.speed=speed
        self.monster = pygame.image.load("monster.png")
        self.radius=radius
    
    def movement(self):
        self.angle+=self.speed
        self.x = 320+math.cos(self.angle)*self.radius-self.monster.get_width()/2
        self.y = 240+math.sin(self.angle)*self.radius-self.monster.get_height()/2

class Coin:
    def __init__(self,x=0,y=0,velocityx=1,velocityy=1):
        self.x=x
        self.y=y
        self.velocityx=velocityx
        self.velocityy=velocityy
        self.coin = pygame.image.load("coin.png")

    def movement(self):
        self.x += self.velocityx
        if self.velocityx > 0 and self.x +self.coin.get_width() >= 640:
            self.velocityx = -self.velocityx
        if self.velocityx < 0 and self.x <= 0:
            self.velocityx= -self.velocityx

        self.y += self.velocityy
        if self.velocityy > 0 and self.y+self.coin.get_height() >= 480:
            self.velocityy = -self.velocityy
        if self.velocityy < 0 and self.y <= 0:
            self.velocityy = -self.velocityy

class MyGame:
    def __init__(self):
        pygame.init()
        self.window = pygame.display.set_mode((640, 480))
        self.game_font = pygame.font.SysFont("Arial", 30)
        self.score=0
        
        
        while True: 
            self.get_score() 
            self.display()
            self.check_events() 
            self.object_movements()
    
    def get_score(self):
        if robot.x in range (coin.x-20, coin.x+20) and robot.y in range (coin.y-20, coin.y+20):
            self.score +=1
        if robot.x in range (int(monster1.x)-20, int(monster1.x)+20) and robot.y in range (int(monster1.y)-20, int(monster1.y)+20):
            self.score -=1
        if robot.x in range (int(monster2.x)-20, int(monster2.x)+20) and robot.y in range (int(monster2.y)-20, int(monster2.y)+20):
            self.score -=1
        self.game_text = self.game_font.render(f"Score: {self.score}", True, (250, 250, 250))
        return self.game_text

    def check_events(self):
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                exit()    

            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT:
                    robot.to_left = True
                if event.key == pygame.K_RIGHT:
                    robot.to_right = True
                if event.key == pygame.K_UP:
                    robot.to_up = True
                if event.key == pygame.K_DOWN:
                    robot.to_down = True

            if event.type == pygame.KEYUP:
                if event.key == pygame.K_LEFT:
                    robot.to_left = False
                if event.key == pygame.K_RIGHT:
                    robot.to_right = False
                if event.key == pygame.K_UP:
                    robot.to_up = False
                if event.key == pygame.K_DOWN:
                    robot.to_down = False

    def display(self):
        clock = pygame.time.Clock()
        self.window.fill((0, 0, 0))
        self.window.blit(robot.robot, (robot.x, robot.y))
        self.window.blit(coin.coin, (coin.x, coin.y))
        self.window.blit(monster1.monster, (monster1.x, monster1.y))
        self.window.blit(monster2.monster, (monster2.x, monster2.y))
        self.window.blit(self.get_score(), (200,0))
        pygame.display.flip()
        clock.tick(200)

    def object_movements(self):
        coin.movement()
        robot.movement()
        monster1.movement()
        monster2.movement()   

if __name__=='__main__':
    robot=Robot()
    coin=Coin()
    monster1=Monster(320,240,0.01)
    monster2=Monster(320,240,0.02,300)
    MyGame()
